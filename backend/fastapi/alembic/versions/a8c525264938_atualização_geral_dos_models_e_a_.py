"""atualização geral dos models e a criação do model menu

Revision ID: a8c525264938
Revises: b1826036274a
Create Date: 2025-06-09 10:13:40.094765

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a8c525264938'
down_revision: Union[str, None] = 'b1826036274a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('challenge_tasks', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('challenge_tasks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('completed_challenge_tasks', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('completed_challenge_tasks', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('completed_challenge_tasks', 'completed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('configurations', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('configurations', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('gift_products', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('gift_products', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('gift_shop_purchases', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('gift_shop_purchases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('gift_shop_purchases', 'paid_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.add_column('gift_shops', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('gift_shops', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('guests', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('guests', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('invitations', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('invitations', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('photo_albums', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('photo_albums', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('photo_challenges', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('photo_challenges', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('photos', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('photos', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('photos', 'upload_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.add_column('schedule_items', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('schedule_items', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('schedule_items', 'time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.add_column('schedules', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('schedules', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('timeline_items', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('timeline_items', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('timeline_items', 'date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.add_column('timelines', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('timelines', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('timelines', 'updated_at')
    op.drop_column('timelines', 'created_at')
    op.alter_column('timeline_items', 'date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('timeline_items', 'updated_at')
    op.drop_column('timeline_items', 'created_at')
    op.drop_column('schedules', 'updated_at')
    op.drop_column('schedules', 'created_at')
    op.alter_column('schedule_items', 'time',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('schedule_items', 'updated_at')
    op.drop_column('schedule_items', 'created_at')
    op.alter_column('photos', 'upload_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('photos', 'updated_at')
    op.drop_column('photos', 'created_at')
    op.alter_column('photo_challenges', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('photo_challenges', 'updated_at')
    op.alter_column('photo_albums', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('photo_albums', 'updated_at')
    op.drop_column('invitations', 'updated_at')
    op.drop_column('invitations', 'created_at')
    op.drop_column('guests', 'updated_at')
    op.drop_column('guests', 'created_at')
    op.drop_column('gift_shops', 'updated_at')
    op.drop_column('gift_shops', 'created_at')
    op.alter_column('gift_shop_purchases', 'paid_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('gift_shop_purchases', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('gift_shop_purchases', 'updated_at')
    op.drop_column('gift_products', 'updated_at')
    op.drop_column('gift_products', 'created_at')
    op.drop_column('configurations', 'updated_at')
    op.drop_column('configurations', 'created_at')
    op.alter_column('completed_challenge_tasks', 'completed_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('completed_challenge_tasks', 'updated_at')
    op.drop_column('completed_challenge_tasks', 'created_at')
    op.alter_column('challenge_tasks', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('challenge_tasks', 'updated_at')
    # ### end Alembic commands ###
